services:
  enum:
    build: https://github.com/owasp-amass/amass.git#main
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./config:/.config/amass:rw
      - ./data/enum:/data:rw
    depends_on:
      engine:
        condition: service_healthy
      syslog:
        condition: service_healthy
    entrypoint: /bin/enum

  viz:
    build: https://github.com/owasp-amass/amass.git#main
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./config:/.config/amass:rw
      - ./data/viz:/data:rw
    depends_on:
      assetdb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      syslog:
        condition: service_healthy
    entrypoint: /bin/viz

  subs:
    build: https://github.com/owasp-amass/amass.git#main
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./config:/.config/amass:rw
      - ./data/subs:/data:rw
    depends_on:
      assetdb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      syslog:
        condition: service_healthy
    entrypoint: /bin/subs

  assoc:
    build: https://github.com/owasp-amass/amass.git#main
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./config:/.config/amass:rw
      - ./data/assoc:/data:rw
    depends_on:
      assetdb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      syslog:
        condition: service_healthy
    entrypoint: /bin/assoc

  track:
    build: https://github.com/owasp-amass/amass.git#main
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./config:/.config/amass:rw
      - ./data/track:/data:rw
    depends_on:
      assetdb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      syslog:
        condition: service_healthy
    entrypoint: /bin/track

  engine:
    build: https://github.com/owasp-amass/amass.git#main
    container_name: engine
    working_dir: /.config/amass
    networks:
      - amass
    environment:
      - POSTAL_SERVER_HOST=postal
      - POSTAL_SERVER_PORT=8000
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./data/engine:/.config/amass:rw
    expose: 
      - "4000"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 360s
      resources:
        reservations:
          memory: 1024M
    depends_on:
      assetdb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      postal:
        condition: service_healthy
      syslog:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "ae_isready", "--host", "127.0.0.1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    entrypoint: /bin/engine

  assetdb:
    build: https://github.com/owasp-amass/asset-db.git#main
    shm_size: '4gb'
    container_name: assetdb
    networks:
      - amass
    volumes:
      - ./assetdb/postgres:/var/lib/postgresql/data:rw
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AMASS_DB=${AMASS_DB}
      - AMASS_USER=${AMASS_USER}
      - AMASS_PASSWORD=${AMASS_PASSWORD}
    ports:
      - "55432:5432"
    deploy:
      restart_policy:
        condition: any
      resources:
        reservations:
          memory: 512M
    entrypoint:
      - sh
      - -euc
      - |
        /usr/local/bin/docker-entrypoint.sh postgres

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    networks:
      - amass
    volumes:
      - ./assetdb/neo4j:/data:rw
    environment:
      - NEO4J_AUTH=neo4j/${AMASS_PASSWORD}
      - NEO4J_server_memory_heap_max__size=4G
    ports:
      - "7474:7474"
      - "7687:7687"
    deploy:
      restart_policy:
        condition: any
      resources:
        reservations:
          memory: 2048M
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postal:
    image: ghcr.io/le0pard/postal_server:latest
    container_name: postal
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    expose: 
      - "8000"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 360s
      resources:
        reservations:
          memory: 2048M
    depends_on:
      syslog:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://postal:8000/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  syslog:
    image: lscr.io/linuxserver/syslog-ng:latest
    container_name: syslog
    networks:
      - amass
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/logs:/config:rw
      - ./logs:/var/log:rw
    expose:
      - "5514/udp"
      - "6601/tcp"
      - "6514/tcp"
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  amass:
    driver: bridge
    name: amass-net
